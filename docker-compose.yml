services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rag
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: unless-stopped

  # Local LLM runtime (internal only)
  ollama:
    image: ollama/ollama:latest
    # No ports: keep private on the compose network
    volumes:
      - ollama:/root/.ollama
    restart: unless-stopped

  api:
    build: ./services/api
    env_file: .env
    environment:
      # LLM
      OLLAMA_HOST: http://ollama:11434
      OLLAMA_MODEL: ${OLLAMA_MODEL:-llama3.1}

      # Preview cache for PDF/HTML snippets
      PREVIEW_CACHE_DIR: /cache/preview

      # Optional CORS allowlist (comma-separated). Use your Vite URL in dev.
      ALLOW_ORIGINS: ${ALLOW_ORIGINS:-http://localhost:5173}

      # Keep your existing vars from .env as-is
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
      ollama:
        condition: service_started
    ports:
      - "${API_PORT}:8000"
    volumes:
      - ./services/api/app:/app/app
      - api-cache:/cache         # <â€” new: persistent cache for previews
    restart: unless-stopped

  web:
    build: ./services/web
    env_file: .env
    depends_on:
      api:
        condition: service_started
    ports:
      - "${WEB_PORT}:5173"
    volumes:
      - ./services/web:/app
      - /app/node_modules
    command: ["sh", "-c", "npm install && npm run dev -- --host"]
    restart: unless-stopped

volumes:
  pgdata:
  qdrant_storage:
  ollama:
  api-cache:
